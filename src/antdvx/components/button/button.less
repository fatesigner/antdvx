@import "~ant-design-vue/es/button/style/mixin";
@import "../../themes/default";

@colorArr: {
  primary: @primary-color;
  secondary: @secondary-color;
  tertiary: @tertiary-color;
  success: @success-color;
  warning: @warning-color;
  danger: @danger-color;
  red: @red-color;
  orange: @orange-color;
  yellow: @yellow-color;
  green: @green-color;
  cyan: @cyan-color;
  blue: @blue-color;
  purple: @purple-color;
}

.set-btn-color(@type, @color, @background, @border) {
  // default type
  .ant-btn-default.ant-color-@{type} {
    &:not([disabled]):hover,
    &:not([disabled]):focus {
      .button-color(~`colorPalette('@{background}', 5)`; #fff; ~`colorPalette('@{background}', 5)`);
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      .button-color(~`colorPalette('@{background}', 7)`; #fff; ~`colorPalette('@{background}', 7)`);
    }
  }

  // primary type
  .ant-btn-primary.ant-color-@{type} {
    .button-color(@color; @background; @background);

    text-shadow: @btn-text-shadow;
    box-shadow: @btn-primary-shadow;

    &:not([disabled]):hover,
    &:not([disabled]):focus {
      .button-color(@color; ~`colorPalette('@{background}', 5)`; ~`colorPalette('@{background}', 5)`);
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      .button-color(@color; ~`colorPalette('@{background}', 6)`; ~`colorPalette('@{background}', 6)`);
    }

    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:active {
        opacity: 0.7;
        .button-color(@color; @background; @background);
      }
    }

    .ant-btn-group {
      &:not(:first-child):not(:last-child) {
        border-right-color: @border;
        border-left-color: @border;

        &:disabled {
          border-color: @btn-default-border;
        }
      }

      &:first-child {
        &:not(:last-child) {
          border-right-color: @border;

          &[disabled] {
            border-right-color: @btn-default-border;
          }
        }
      }
    }

    .ant-btn-group &:last-child:not(:first-child),
    .ant-btn-group & + & {
      border-left-color: @border;

      &[disabled] {
        border-left-color: @btn-default-border;
      }
    }
  }

  // dashed type
  .ant-btn-dashed.ant-color-@{type} {
    &:not([disabled]):hover,
    &:not([disabled]):focus {
      .button-color(~`colorPalette('@{background}', 5)`; #fff; ~`colorPalette('@{background}', 5)`);
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      .button-color(~`colorPalette('@{background}', 7)`; #fff; ~`colorPalette('@{background}', 7)`);
    }
  }

  // link type
  .ant-btn-link.ant-color-@{type} {
    &:not([disabled]) {
      color: @background;
    }

    &:not([disabled]):hover,
    &:not([disabled]):focus {
      .button-color(~`colorPalette('@{background}', 5)`; transparent; transparent);
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      .button-color(~`colorPalette('@{background}', 7)`; transparent; transparent);
    }

    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:active {
        color: @background;
        opacity: 0.7;
      }
    }
  }

  // text type
  .ant-btn-text.ant-color-@{type} {
    color: @background;

    &:not([disabled]):hover,
    &:not([disabled]):focus {
      color: ~`colorPalette("@{background}", 5) `;
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      color: ~`colorPalette("@{background}", 7) `;
    }

    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:active {
        color: @background;
        opacity: 0.7;
      }
    }
  }

  // outline type
  .ant-btn-outline.ant-color-@{type}:not(.ant-btn-primary):not(.ant-btn-danger) {
    .button-color(@background; #fff; @background);

    &:not([disabled]):hover,
    &:not([disabled]):focus {
      .button-color(~`colorPalette('@{background}', 5)`; #fff; ~`colorPalette('@{background}', 5)`);
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      .button-color(~`colorPalette('@{background}', 7)`; #fff; ~`colorPalette('@{background}', 7)`);
    }

    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:active {
        opacity: 0.7;
        .button-color(@background; #fff; @background);
      }
    }
  }

  // 3d type
  .ant-btn.ant-btn-3d.ant-color-@{type} {
    color: #fff;
    background: radial-gradient(100% 100% at 100% 0%, @background 0%, @background 100%);
    border-color: ~`colorPalette('@{background}', 6.2) `;
    box-shadow: 0 2px 4px rgba(45, 35, 66, 0.4), 0 7px 13px -24px rgba(45, 35, 66, 0.3), inset 0 -2px 0 ~`colorPalette('@{background}', 6.7) `;

    &:not([disabled]):hover,
    &:not([disabled]):focus {
      color: #fff;
      border-color: ~`colorPalette('@{background}', 6.2) `;
      box-shadow: 0 4px 6px rgba(45, 35, 66, 0.4), 0 7px 13px -24px rgba(45, 35, 66, 0.3), inset 0 -2px 0 ~`colorPalette('@{background}', 6.7) `;
    }

    &:not([disabled]):active,
    &:not([disabled]).active {
      color: #fff;
      border-color: transparent;
      box-shadow: inset 0 3px 7px ~`colorPalette('@{background}', 7) `;
    }

    &[disabled] {
      &,
      &:hover,
      &:focus,
      &:active {
        color: #fff;
        background: radial-gradient(100% 100% at 100% 0%, @background 0%, @background 100%);
        border-color: ~`colorPalette('@{background}', 6.2) `;
        box-shadow: 0 2px 4px rgba(45, 35, 66, 0.4), 0 7px 13px -24px rgba(45, 35, 66, 0.3), inset 0 -2px 0 ~`colorPalette('@{background}', 6.7) `;
        opacity: 0.7;
      }
    }
  }
}

// default type normal
.ant-btn.ant-btn-default {
  &:not([disabled]):hover,
  &:not([disabled]):focus {
    .button-color(#333; #fff; #999);
  }

  &:not([disabled]):active,
  &:not([disabled]).active {
    .button-color(#333; #fff; #666);
  }

  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      background: #fff;
    }
  }
}

// primary type normal
.ant-btn.ant-btn-primary.ant-color-default {
  @color: rgba(0, 0, 0, 0.85);
  @background: #fff;
  @border: #ddd;

  .button-color(@color; @background; @border);

  text-shadow: none;
  box-shadow: none;
  //text-shadow: @btn-text-shadow;
  //box-shadow: @btn-primary-shadow;

  &:hover,
  &:focus {
    .button-color(@color; #f8f8f8; #ddd);
  }

  &:active,
  &.active {
    .button-color(@color; #ededed; #ccc);
  }

  .ant-btn-group {
    &:not(:first-child):not(:last-child) {
      border-right-color: @border;
      border-left-color: @border;

      &:disabled {
        border-color: @btn-default-border;
      }
    }

    &:first-child {
      &:not(:last-child) {
        border-right-color: @border;

        &[disabled] {
          border-right-color: @btn-default-border;
        }
      }
    }
  }

  .ant-btn-group &:last-child:not(:first-child),
  .ant-btn-group & + & {
    border-left-color: @border;

    &[disabled] {
      border-left-color: @btn-default-border;
    }
  }
}

// dashed type normal
.ant-btn.ant-btn-dashed {
  &:not([disabled]):hover,
  &:not([disabled]):focus {
    .button-color(~`colorPalette('#444', 3)`; #fff; ~`colorPalette('#444', 3)`);
  }

  &:not([disabled]):active,
  &:not([disabled]).active {
    .button-color(~`colorPalette('#444', 5)`; #fff; ~`colorPalette('#444', 5)`);
  }

  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      background: #fff;
    }
  }
}

// link type normal
.ant-btn.ant-btn-link {
  &:not([disabled]) {
    color: rgba(0, 0, 0, 0.85);
  }

  &:not([disabled]):hover,
  &:not([disabled]):focus {
    .button-color(~`colorPalette('#444', 3)`; transparent; transparent);
  }

  &:not([disabled]):active,
  &:not([disabled]).active {
    .button-color(~`colorPalette('#444', 5)`; transparent; transparent);
  }
}

// outline type normal
.ant-btn.ant-btn-outline {
  @color: rgba(0, 0, 0, 1);

  &:not([disabled]):hover,
  &:not([disabled]):focus {
    .button-color(@color; #fff; #999);
  }

  &:not([disabled]):active,
  &:not([disabled]).active {
    .button-color(#333; #fff; #666);
  }

  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      background: #fff;
    }
  }
}

// 3d type normal
.ant-btn.ant-btn-3d {
  background: #fff;
  box-shadow: 0 2px 4px rgba(171, 171, 171, 0.4), 0 7px 13px -14px rgba(45, 35, 66, 0.3), inset 0 -2px 0 #ececec;
  transition: box-shadow 0.15s ease, transform 0.15s ease;
  will-change: box-shadow, transform;

  &:not([disabled]):hover {
    color: @text-color;
    border-color: #d9d9d9;
    box-shadow: 0 4px 6px rgba(171, 171, 171, 0.4), 0 7px 13px -24px rgba(45, 35, 66, 0.3), inset 0 -2px 0 #ececec;
    transform: translateY(-1px);
  }

  &:not([disabled]):active {
    color: @text-color;
    border-color: #ddd;
    box-shadow: inset 0 3px 7px #cfcfcf;
    transform: translateY(1px);
  }

  &:not([disabled]):focus {
    color: @text-color;
    border-color: #d9d9d9;
  }

  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      background: #fff;
      box-shadow: 0 2px 4px rgba(171, 171, 171, 0.4), 0 7px 13px -14px rgba(45, 35, 66, 0.3), inset 0 -2px 0 #ececec;
    }
  }
}

// size=mini
.ant-btn.ant-btn-mini {
  width: initial;
  height: initial;
  padding: 0;
  line-height: 1;
}

.ant-btn.ant-loading {
  pointer-events: none;
  transition: none;
}

.ant-btn-upload {
  &.ant-btn-autosize {
    height: auto;
  }
}

.ant-btn-spin {
  position: relative;
  display: inline-block;
  padding: 10px;
  text-align: center;
  cursor: default;
  border-radius: 2px;
  transition: background-color 340ms ease-out;

  &:not(.ant-btn-spin-disabled) {
    cursor: pointer;

    &:hover {
      background-color: #f3f2f2;
    }

    &:active {
      background-color: #d6d6d6;
    }
  }
}

.ant-btn-spin-loading {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.2);
}

each(@colorArr, {
  .set-btn-color(@key, #fff, @value, @green-5);
});
